# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Check out Git repository
      - uses: actions/checkout@v2
        with:
          ref: 'main'

      # Set up environment with Java and Maven
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8

      # Set up dependency cache
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      # Setup Git User
      - name: Configure git user for release commits
        env:
          X_GITHUB_USERNAME: ${{ secrets.ADOBE_BOT_GITHUB_USERNAME  }}
        run: |
          git config user.email "pankajpr@adobe.com"
          git config user.name "Pankaj Parashar"

      
      # Prepare Release
      - name: Release Parent POM
        run: mvn -B clean release:prepare release:perform
      - name: Create Release
        id: create_parent_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-parent-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_parent_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./templates/contact-us/contact-us-v1/target/*.zip
          asset_content_type: application/zip
          
      # Prepare Release
      # - name: Release
      #   working-directory: ./templates/contact-us/contact-us-v1
      #   run: mvn -B clean release:prepare release:perform
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./templates/contact-us/contact-us-v1/target/*.zip
      #     asset_content_type: application/zip
